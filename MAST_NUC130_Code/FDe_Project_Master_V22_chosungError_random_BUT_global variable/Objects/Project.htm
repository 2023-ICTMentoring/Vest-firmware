<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Sep 05 17:16:27 2023
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; run_game_mode &rArr; run_function &rArr; run_keyboard_define &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[1b]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ACMP_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[22]">ADC_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1a]">CAN0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1b]">Default_Handler</a> from startup_nuc1xx.o(.text) referenced 3 times from startup_nuc1xx.o(RESET)
 <LI><a href="#[8]">EINT0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[9]">EINT1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[a]">GPAB_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[b]">GPCDE_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[20]">I2S_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1f]">PDMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1d]">PS2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[c]">PWMA_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[d]">PWMB_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[21]">PWRWU_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[23]">RTC_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[27]">Reset_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[14]">SPI0_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[15]">SPI1_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[16]">SPI2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[17]">SPI3_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[25]">SystemInit</a> from system_nuc100series.o(i.SystemInit) referenced from startup_nuc1xx.o(.text)
 <LI><a href="#[e]">TMR0_IRQHandler</a> from nuc130lc1cn.o(i.TMR0_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[f]">TMR1_IRQHandler</a> from nuc130lc1cn.o(i.TMR1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[10]">TMR2_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[11]">TMR3_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[12]">UART02_IRQHandler</a> from nuc130lc1cn.o(i.UART02_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from nuc130lc1cn.o(i.UART1_IRQHandler) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[1c]">USBD_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from startup_nuc1xx.o(.text) referenced from startup_nuc1xx.o(RESET)
 <LI><a href="#[26]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc1xx.o(.text)
 <LI><a href="#[24]">main</a> from nuc130lc1cn.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[37]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2a]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[6d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[27]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPAB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PWMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[59]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[71]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[74]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[36]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2f]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[78]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>ADC_Open</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, adc.o(i.ADC_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[61]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[5f]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[3a]"></a>CLK_SetHCLK</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[62]"></a>CLK_SetModuleClock</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[60]"></a>CLK_WaitClockReady</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[63]"></a>GPIO_SetMode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[5c]"></a>Module_LCD_onebyte</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, nuc130lc1cn.o(i.Module_LCD_onebyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Module_LCD_onebyte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
</UL>

<P><STRONG><a name="[4d]"></a>Module_LCD_string</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, nuc130lc1cn.o(i.Module_LCD_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Module_LCD_string
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>SYS_ResetCPU</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetCPU))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[3b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, system_nuc100series.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[25]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc100series.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER_GetModuleClock</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, timer.o(i.TIMER_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[3e]"></a>TIMER_Open</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, timer.o(i.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[e]"></a>TMR0_IRQHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, nuc130lc1cn.o(i.TMR0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TMR0_IRQHandler &rArr; adc_read &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_adc_return
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR1_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, nuc130lc1cn.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TMR1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART02_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.UART02_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART_EnableInt</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uart.o(i.UART_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_EnableInt
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[46]"></a>UART_Open</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, uart.o(i.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UART_Open &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[5e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, nuc130lc1cn.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
</UL>

<P><STRONG><a name="[79]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[42]"></a>adc_read</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, nuc130lc1cn.o(i.adc_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_read &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>auto_off</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, nuc130lc1cn.o(i.auto_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = auto_off
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb2rf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>check_pop</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.check_pop))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_3355_mast_read
</UL>

<P><STRONG><a name="[68]"></a>check_popusb</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.check_popusb))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb2rf
</UL>

<P><STRONG><a name="[40]"></a>clrflag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.clrflag))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_3355_mast_read
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>isflag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.isflag))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[24]"></a>main</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; run_game_mode &rArr; run_function &rArr; run_keyboard_define &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb2rf
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time1_delay
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time0_delay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_ini_usb
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_ini_rf
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_LCD_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[52]"></a>rf_3355_mast_read</STRONG> (Thumb, 256 bytes, Stack size 4 bytes, nuc130lc1cn.o(i.rf_3355_mast_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rf_3355_mast_read
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_student_receive_checksum
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[49]"></a>ring_ini_rf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.ring_ini_rf))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>ring_ini_usb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.ring_ini_usb))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>run_function</STRONG> (Thumb, 770 bytes, Stack size 24 bytes, nuc130lc1cn.o(i.run_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = run_function &rArr; run_keyboard_define &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetCPU
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time0_delay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_student_send
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_3355_mast_read
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_LCD_string
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
</UL>

<P><STRONG><a name="[50]"></a>run_game_mode</STRONG> (Thumb, 1920 bytes, Stack size 8 bytes, nuc130lc1cn.o(i.run_game_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = run_game_mode &rArr; run_function &rArr; run_keyboard_define &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time0_delay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setflag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_chosung_to_number
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_keyboard_define
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_off
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_LCD_string
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_LCD_onebyte
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>run_keyboard_adc_return</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.run_keyboard_adc_return))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>run_keyboard_define</STRONG> (Thumb, 766 bytes, Stack size 32 bytes, nuc130lc1cn.o(i.run_keyboard_define))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = run_keyboard_define &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>run_processor_chosung_to_number</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.run_processor_chosung_to_number))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
</UL>

<P><STRONG><a name="[5a]"></a>run_processor_keyin_ret_ascii_chosung</STRONG> (Thumb, 352 bytes, Stack size 20 bytes, nuc130lc1cn.o(i.run_processor_keyin_ret_ascii_chosung))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = run_processor_keyin_ret_ascii_chosung &rArr; auto_off
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time0_delay
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isflag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrflag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_off
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
</UL>

<P><STRONG><a name="[54]"></a>run_student_receive_checksum</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.run_student_receive_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_3355_mast_read
</UL>

<P><STRONG><a name="[58]"></a>run_student_send</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, nuc130lc1cn.o(i.run_student_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = run_student_send
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[41]"></a>setflag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.setflag))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_3355_mast_read
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_off
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>setup</STRONG> (Thumb, 368 bytes, Stack size 8 bytes, nuc130lc1cn.o(i.setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = setup &rArr; TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Start
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableInt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>time0_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.time0_delay))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_processor_keyin_ret_ascii_chosung
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game_mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>time1_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.time1_delay))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>usb2rf</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, nuc130lc1cn.o(i.usb2rf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usb2rf &rArr; auto_off
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_popusb
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_off
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1b]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc1xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc1xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, system_nuc100series.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[39]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, uart.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[45]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableInt
</UL>

<P><STRONG><a name="[65]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[56]"></a>SYS_UnlockReg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.SYS_UnlockReg))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_function
</UL>

<P><STRONG><a name="[64]"></a>TIMER_EnableInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.TIMER_EnableInt))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>

<P><STRONG><a name="[66]"></a>TIMER_Start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nuc130lc1cn.o(i.TIMER_Start))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
